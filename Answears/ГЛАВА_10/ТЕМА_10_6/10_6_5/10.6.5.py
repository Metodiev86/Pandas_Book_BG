# 5.	Експортиране на Series в JSON: Създайте Pandas Series с произволни данни и имена на индекси. Експортирайте го в JSON файл series_output.json. Разгледайте съдържанието на файла. Опитайте да експортирате Series с различна ориентация (например, 'index').

import pandas as pd

# --- 1. Създаване на Series с произволни данни и индекси ---
s = pd.Series([120, 85, 95], index=["Product A", "Product B", "Product C"])

# --- 2. Експортиране в JSON файл с ориентация по подразбиране (values only) ---
s.to_json("series_output.json")

# --- 3. Експортиране с ориентация 'index' (запазва индексите като ключове) ---
s.to_json("series_output_index.json", orient="index")

# --- 4. Преглеждане на съдържанието на файловете (за проверка) ---
with open("series_output.json", encoding="utf-8") as f1, \
     open("series_output_index.json", encoding="utf-8") as f2:
    print("Съдържание на series_output.json:")
    print(f1.read())
    print("\nСъдържание на series_output_index.json (с ориентация 'index'):")
    print(f2.read())

#=============================================Обяснение:==================================================================================
#
# s.to_json("file.json") по подразбиране записва числата като масив без имената на индексите.
#
# orient='index' записва Series като JSON обект, където индексите са ключове.
#
#=========================================================================================================================================
#
#Този подход е удобен при запис на данни, които ще се използват в JavaScript или REST API, където структурата "ключ-стойност" е по-подходяща.
