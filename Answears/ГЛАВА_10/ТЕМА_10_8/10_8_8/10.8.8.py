# 8.	Записване на DataFrame с вложена структура в XML (симулирано)**: Въпреки че pd.to_xml() не поддържа директно създаване на напълно вложени XML структури от DataFrame, представете си DataFrame, където една от колоните съдържа списъци или други структурирани данни. Създайте такъв DataFrame и напишете код, който да го преобразува в XML формат, където тази колона се представя като вложен XML елемент (може да се наложи и тук да се използва xml.etree.ElementTree за по-гъвкаво генериране на XML).

import pandas as pd
import xml.etree.ElementTree as ET

# Създаване на DataFrame
data = {'name': ['Alice', 'Bob'],
        'interests': [['reading', 'hiking'], ['coding', 'gaming']]}
df = pd.DataFrame(data)

# --- 2. Генериране на XML структура ---
root = ET.Element('data')  # Създаваме коренов елемент

# Преглеждаме редовете в DataFrame и създаваме XML елементи
for _, row in df.iterrows():
  person = ET.SubElement(root, 'person', name=row['name'])  # Добавяме елемент person с атрибут 'name'

  # Добавяме интересите като вложен елемент
  interests_elem = ET.SubElement(person, 'interests')  # Създаваме елемент 'interests'
  for interest in row['interests']:
    # Създаваме вложен елемент 'interest' за всеки интерес
    ET.SubElement(interests_elem, 'interest').text = interest

# --- 3. Преобразуваме в XML стринг ---
tree = ET.ElementTree(root)
tree.write('output.xml', encoding='utf-8', xml_declaration=True)

# Извеждаме резултатния XML (за да видим в конзолата)
ET.dump(root)

#===========================================================Обяснение:==============================================================
#
# Създаване на DataFrame: Създаваме DataFrame с две колони – name (име на човек) и interests (списък с интереси).
#
# ==================================================================================================================================
#
# Генериране на XML:
#
# Създаваме основния елемент (data).
#
# Преглеждаме редовете на DataFrame с iterrows(). За всеки ред добавяме елемент person със стойност от колоната name като атрибут.
#
# След това за всяко лице добавяме вложен елемент interests, който съдържа по един елемент interest за всеки интерес.
#
# ==================================================================================================================================
#
# Записване в XML файл: Записваме резултата в XML файл с tree.write(), като добавяме декларация за кодиране (utf-8).
#
# ===================================================================================================================================
#
# Извеждане на резултата: За да видим резултата в конзолата, използваме ET.dump().

