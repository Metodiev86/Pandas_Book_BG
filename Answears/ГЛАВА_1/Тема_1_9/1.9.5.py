#5.	Създайте функция, която приема два списъка с еднаква дължина. Опитайте се да разделите елементите на първия списък на съответните елементи на втория списък. Използвайте try-except ZeroDivisionError блок, за да обработите делението на нула. Съберете резултатите в нов списък и го върнете.

# Два списъка с цели числа, които имат еднаква дължина
list1 = [2, 16, 24, 54, 99, 10]
list2 = [2, 8, 6, 9, 0, 5]

# Функция за деление на елементите от двата списъка
def division_list(l1: list[int], l2: list[int]):
    result_list = []  # Списък, в който ще съхраняваме резултатите

    # zip обединява елементите по двойки: (l1[0], l2[0]), (l1[1], l2[1]), ...
    for i, j in zip(l1, l2):
        try:
            result = i / j  # Опитваме да разделим i на j
            result_list.append(result)  # Добавяме резултата към списъка
        except ZeroDivisionError:
            # При деление на 0, информираме потребителя, но продължаваме с останалите елементи
            print(f"ГРЕШКА: Не може да се раздели {i} на {j} (деление на нула)!")
            result_list.append(None)  # Добавяме None, за да пазим структурата на резултатите

    return result_list  # Връщаме списък с резултати (или None на мястото на грешка)

# Извикване на функцията и отпечатване на резултатите
print("Резултати от делението:", division_list(list1, list2))
