#41.	Създайте сценарий, в който .pipe() значително подобрява четимостта на кода при сложна последователност от операции върху DataFrame.


# Имате DataFrame с данни за продукти, включително име, категория, цена и брой. Желаете да:
#
# 1. Филтрирате продуктите само от категория 'Електроника'
#
# 2. Добавите колона 'обща_стойност' = цена × брой
#
# 3. Премахнете всички продукти с обща стойност под 100
#
# 4. Преименувате колоната 'име' на 'продукт'
#
# 4. Нормализирате цените, като ги мащабирате между 0 и 1


# Стандартен (нечетим) подход:


# import pandas as pd

# result = df[df['категория'] == 'Електроника']
# result['обща_стойност'] = result['цена'] * result['брой']
# result = result[result['обща_стойност'] >= 100]
# result = result.rename(columns={'име': 'продукт'})
# min_price = result['цена'].min()
# max_price = result['цена'].max()
# result['нормализирана_цена'] = (result['цена'] - min_price) / (max_price - min_price)


import pandas as pd

# Примерни данни
df = pd.DataFrame({
    'име': ['Лаптоп', 'Мишка', 'Кафе машина', 'Клавиатура'],
    'категория': ['Електроника', 'Електроника', 'Уреди', 'Електроника'],
    'цена': [1200, 25, 150, 80],
    'брой': [1, 3, 2, 5]
})

# === Функции за трансформации ===
def филтрирай_електроника(d):
    return d[d['категория'] == 'Електроника']

def добави_обща_стойност(d):
    d = d.copy()
    d['обща_стойност'] = d['цена'] * d['брой']
    return d

def премахни_евтини(d):
    return d[d['обща_стойност'] >= 100]

def преименувай_име(d):
    return d.rename(columns={'име': 'продукт'})

def нормализирай_цена(d):
    d = d.copy()
    d['нормализирана_цена'] = (d['цена'] - d['цена'].min()) / (d['цена'].max() - d['цена'].min())
    return d

# === Цепочка от трансформации чрез pipe ===
result = (
    df
    .pipe(филтрирай_електроника)
    .pipe(добави_обща_стойност)
    .pipe(премахни_евтини)
    .pipe(преименувай_име)
    .pipe(нормализирай_цена)
)

print(result)
