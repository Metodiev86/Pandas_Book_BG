#41.	Създайте сценарий, в който .pipe() значително подобрява четимостта на кода при сложна последователност от операции върху DataFrame.


# Имате DataFrame с данни за продукти, включително име, категория, цена и брой. Желаете да:
#
# 1. Филтрирате продуктите само от категория 'Електроника'
#
# 2. Добавите колона 'обща_стойност' = цена × брой
#
# 3. Премахнете всички продукти с обща стойност под 100
#
# 4. Преименувате колоната 'име' на 'продукт'
#
# 4. Нормализирате цените, като ги мащабирате между 0 и 1


# Стандартен (нечетим) подход:


# import pandas as pd

# result = df[df['категория'] == 'Електроника']
# result['обща_стойност'] = result['цена'] * result['брой']
# result = result[result['обща_стойност'] >= 100]
# result = result.rename(columns={'име': 'продукт'})
# min_price = result['цена'].min()
# max_price = result['цена'].max()
# result['нормализирана_цена'] = (result['цена'] - min_price) / (max_price - min_price)


import pandas as pd

# Примерни данни
df = pd.DataFrame({
    'име': ['Лаптоп', 'Мишка', 'Кафе машина', 'Клавиатура'],
    'категория': ['Електроника', 'Електроника', 'Уреди', 'Електроника'],
    'цена': [1200, 25, 150, 80],
    'брой': [1, 3, 2, 5]
})

# Последователност от трансформации с .pipe и lambda функции
result = (
    df
    .pipe(lambda d: d[d['категория'] == 'Електроника'])  # 1. Филтриране по категория
    .pipe(lambda d: d.assign(обща_стойност=d['цена'] * d['брой']))  # 2. Изчисляване на обща стойност
    .pipe(lambda d: d[d['обща_стойност'] >= 100])  # 3. Премахване на евтини
    .pipe(lambda d: d.rename(columns={'име': 'продукт'}))  # 4. Преименуване
    .pipe(lambda d: d.assign(
        нормализирана_цена=(d['цена'] - d['цена'].min()) / (d['цена'].max() - d['цена'].min())
    ))  # 5. Нормализация
)

print(result)

