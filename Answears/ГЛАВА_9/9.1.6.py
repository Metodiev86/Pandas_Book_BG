# 6.	Използвайте .apply() за да намерите служителя с най-нисък бонус (ако има такъв, в противен случай върнете None) за всеки отдел.

import pandas as pd

# Изходни данни
data = {
  'Отдел': ['Продажби', 'Маркетинг', 'Продажби', 'Развитие', 'Маркетинг', 'Развитие', 'Продажби', 'Маркетинг'],
  'Служител': ['Алиса', 'Борис', 'Цветан', 'Диана', 'Елена', 'Георги', 'Иван', 'Жана'],
  'Пол': ['Ж', 'М', 'М', 'Ж', 'Ж', 'М', 'М', 'Ж'],
  'Години': [25, 32, 40, 28, 35, 45, 30, 26],
  'Заплащане': [5000, 6000, 7500, 8000, 6500, 9000, 7000, 5500],
  'Бонус': [500, None, 750, 1000, 650, 1200, 700, None]
}
df_employees = pd.DataFrame(data)


# Функция, която намира служителя с най-нисък бонус
def find_lowest_bonus(group):
  # Филтрираме редовете без бонуси (None)
  group_without_none = group.dropna(subset=['Бонус'])

  if not group_without_none.empty:
    # Намираме служителя с най-нисък бонус
    lowest_bonus_employee = group_without_none.loc[group_without_none['Бонус'].idxmin()]
    return lowest_bonus_employee['Служител']
  else:
    # Връщаме None, ако няма бонуси
    return None


# Групираме по 'Отдел' и прилагаме функцията
result = df_employees.groupby('Отдел').apply(find_lowest_bonus)

# Показваме резултата
print("\nСлужител с най-нисък бонус за всеки отдел:\n", result)


# Обяснение:
# Функция find_lowest_bonus(group):
#
# Премахваме редовете с None в колоната 'Бонус' чрез dropna(subset=['Бонус']).
#
# Ако има редове с бонуси, намираме служителя с най-нисък бонус чрез idxmin(), което връща индекса на минималната стойност.
#
# Ако няма бонуси (всички стойности са None), връщаме None.
#
# Метод .groupby('Отдел'):
#
# Групираме DataFrame-а по колоната 'Отдел'.
#
# Метод .apply(find_lowest_bonus):
#
# Прилагаме функцията find_lowest_bonus() за всяка група от отделите.
#
# Очакван резултат:
# Този код ще върне името на служителя с най-нисък бонус за всеки отдел или None, ако няма бонуси в даден отдел.