# 3.	Групирайте df_employees по колона 'Години', като използвате функция, която връща възрастова група ('Млади', 'Средна възраст', 'Възрастни'). Дефинирайте сами границите на тези групи. Намерете средното заплащане за всяка възрастова група.

import pandas as pd

# Изходни данни
data = {
    'Отдел': ['Продажби', 'Маркетинг', 'Продажби', 'Развитие', 'Маркетинг', 'Развитие', 'Продажби', 'Маркетинг'],
    'Служител': ['Алиса', 'Борис', 'Цветан', 'Диана', 'Елена', 'Георги', 'Иван', 'Жана'],
    'Пол': ['Ж', 'М', 'М', 'Ж', 'Ж', 'М', 'М', 'Ж'],
    'Години': [25, 32, 40, 28, 35, 45, 30, 26],
    'Заплащане': [5000, 6000, 7500, 8000, 6500, 9000, 7000, 5500],
    'Бонус': [500, None, 750, 1000, 650, 1200, 700, None]
}
df_employees = pd.DataFrame(data)

# Функция за определяне на възрастова група
def age_group(age):
    if age < 30:
        return 'Млади'
    elif age <= 40:
        return 'Средна възраст'
    else:
        return 'Възрастни'

# Добавяме нова колона с възрастова група
df_employees['Възрастова група'] = df_employees['Години'].apply(age_group)

# Групираме и намираме средното заплащане
avg_salary_by_age_group = df_employees.groupby('Възрастова група')['Заплащане'].mean()
print("Средно заплащане по възрастова група:\n", avg_salary_by_age_group)


# Забележки за включване в книга:
# Използваме .apply() с потребителска функция age_group(), за да създадем категориална колона.
#
# Границите са:
#
# < 30 → „Млади“
#
# 30–40 → „Средна възраст“
#
# > 40 → „Възрастни“
#
# След това използваме groupby() и mean() за агрегация.
